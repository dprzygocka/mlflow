# # docker-compose.yml

version: '3'
services:
  minio:
    image: minio/minio
    container_name: mlflow_s3
    ports:
      - "9000:9000"
      - "9001:9001"
    command: server /data --console-address ':9001' --address ':9000'
    environment:
      MINIO_ROOT_USER: minio_user
      MINIO_ROOT_PASSWORD: minio_password
    restart: always
    volumes:
      - minio_data:/data

  mc:
    image: minio/mc
    depends_on:
      - minio
    container_name: mc
    entrypoint: >
      /bin/sh -c " /usr/bin/mc alias set minio http://minio:9000 minio_user minio_password && /usr/bin/mc mb minio/mlflow-storage; exit 0; "


  mlflow_server:
    image: mlflow_server
    container_name: mlflow_server
    ports:
      - "5000:5000"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio_user
      AWS_SECRET_ACCESS_KEY: minio_password
    volumes:
      - duckdb_data:/data
    command:
      - /bin/bash
      - -c
      - mlflow server --backend-store-uri "duckdb:///test.db" --host 0.0.0.0 --port 5000 --default-artifact-root s3://mlflow-storage/
    restart: always

  mlflow_ui:
    image: mlflow_ui
    container_name: mlflow_ui
    ports:
      - "3000:3000"
    environment:
      MLFLOW_S3_ENDPOINT_URL: http://minio:9000
      AWS_ACCESS_KEY_ID: minio_user
      AWS_SECRET_ACCESS_KEY: minio_password
      MLFLOW_PROXY: http://0.0.0.0:5000
    command:
      - /bin/bash
      - -c
      - cd mlflow/server/js && yarn start
    restart: always

volumes:
  duckdb_data:
  minio_data: